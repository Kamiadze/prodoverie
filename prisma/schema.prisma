// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  phone     String?
  password  String
  name      String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookings  Booking[]
  pets      Pet[]
}

model Pet {
  id          String   @id @default(uuid())
  name        String
  type        String
  breed       String?
  age         Int
  ownerId     String
  owner       User     @relation(fields: [ownerId], references: [id])
  bookings    Booking[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Booking {
  id          String   @id @default(uuid())
  startDate   DateTime
  endDate     DateTime
  status      String   @default("pending")
  petId       String
  pet         Pet      @relation(fields: [petId], references: [id])
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  roomType    String
  notes       String?
  sharedWithPetId String? // ID питомца, с которым делится вольер
  totalPrice  Float    @default(0) // Общая стоимость бронирования
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Room {
  id          String   @id @default(uuid())
  type        String   @unique
  price       Float
  capacity    Int      @default(1)
  available   Int
  total       Int
  petType     String   // тип животного: "cat", "dog", "other"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id          String   @id @default(uuid())
  name        String
  email       String
  subject     String
  message     String
  status      String   @default("unread")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
